{
	"id": "fbe27473725b650321d56b12a9d8a752",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BridgeWveduCoin.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\r\n\r\ninterface wVedu is IERC20{\r\n    function mint(address _to, uint256 amount) external;\r\n    function burn(address _from, uint256 amount ) external;\r\n}\r\n\r\ncontract WveduCoin is Ownable {\r\n\r\n    // uint256 public balances;\r\n    address public tokenAddress;\r\n\r\n    event Burn(address indexed burner, uint256 amount);\r\n\r\n    mapping (address => uint256) public pendingBalance;\r\n\r\n    constructor(address _tokenAddress) Ownable(msg.sender) {\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n\r\n    \r\n\r\n    function burn(wVedu from, uint256 _amount) public {\r\n        require(address(from) == tokenAddress);\r\n        from.burn(msg.sender, _amount);\r\n        emit Burn(msg.sender, _amount);\r\n    }\r\n\r\n    function withdraw(wVedu to, uint256 amount) public {\r\n        require(pendingBalance[msg.sender] >= amount);\r\n        pendingBalance[msg.sender] -= amount;\r\n        to.mint(msg.sender,amount);\r\n    }\r\n\r\n    function depositToOtherSide(address account, uint256 amount) public onlyOwner{\r\n        pendingBalance[account] += amount;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BridgeWveduCoin.sol": {
				"WveduCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract wVedu",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToOtherSide",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pendingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract wVedu",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BridgeWveduCoin.sol\":392:1272  contract WveduCoin is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BridgeWveduCoin.sol\":618:720  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BridgeWveduCoin.sol\":661:671  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/BridgeWveduCoin.sol\":699:712  _tokenAddress */\n  dup1\n    /* \"contracts/BridgeWveduCoin.sol\":684:696  tokenAddress */\n  0x01\n  0x00\n    /* \"contracts/BridgeWveduCoin.sol\":684:712  tokenAddress = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BridgeWveduCoin.sol\":618:720  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/BridgeWveduCoin.sol\":392:1272  contract WveduCoin is Ownable {... */\n  jump(tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BridgeWveduCoin.sol\":392:1272  contract WveduCoin is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BridgeWveduCoin.sol\":392:1272  contract WveduCoin is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9dc29fac\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc3fda31a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x3736f85d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BridgeWveduCoin.sol\":559:609  mapping (address => uint256) public pendingBalance */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BridgeWveduCoin.sol\":464:491  address public tokenAddress */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BridgeWveduCoin.sol\":736:925  function burn(wVedu from, uint256 _amount) public {... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/BridgeWveduCoin.sol\":1140:1269  function depositToOtherSide(address account, uint256 amount) public onlyOwner{... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/BridgeWveduCoin.sol\":933:1132  function withdraw(wVedu to, uint256 amount) public {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/BridgeWveduCoin.sol\":559:609  mapping (address => uint256) public pendingBalance */\n    tag_15:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_42\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BridgeWveduCoin.sol\":464:491  address public tokenAddress */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BridgeWveduCoin.sol\":736:925  function burn(wVedu from, uint256 _amount) public {... */\n    tag_30:\n        /* \"contracts/BridgeWveduCoin.sol\":822:834  tokenAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BridgeWveduCoin.sol\":805:834  address(from) == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BridgeWveduCoin.sol\":813:817  from */\n      dup3\n        /* \"contracts/BridgeWveduCoin.sol\":805:834  address(from) == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BridgeWveduCoin.sol\":797:835  require(address(from) == tokenAddress) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"contracts/BridgeWveduCoin.sol\":846:850  from */\n      dup2\n        /* \"contracts/BridgeWveduCoin.sol\":846:855  from.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"contracts/BridgeWveduCoin.sol\":856:866  msg.sender */\n      caller\n        /* \"contracts/BridgeWveduCoin.sol\":868:875  _amount */\n      dup4\n        /* \"contracts/BridgeWveduCoin.sol\":846:876  from.burn(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BridgeWveduCoin.sol\":897:907  msg.sender */\n      caller\n        /* \"contracts/BridgeWveduCoin.sol\":892:917  Burn(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"contracts/BridgeWveduCoin.sol\":909:916  _amount */\n      dup3\n        /* \"contracts/BridgeWveduCoin.sol\":892:917  Burn(msg.sender, _amount) */\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BridgeWveduCoin.sol\":736:925  function burn(wVedu from, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BridgeWveduCoin.sol\":1140:1269  function depositToOtherSide(address account, uint256 amount) public onlyOwner{... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/BridgeWveduCoin.sol\":1255:1261  amount */\n      dup1\n        /* \"contracts/BridgeWveduCoin.sol\":1228:1242  pendingBalance */\n      0x02\n        /* \"contracts/BridgeWveduCoin.sol\":1228:1251  pendingBalance[account] */\n      0x00\n        /* \"contracts/BridgeWveduCoin.sol\":1243:1250  account */\n      dup5\n        /* \"contracts/BridgeWveduCoin.sol\":1228:1251  pendingBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BridgeWveduCoin.sol\":1228:1261  pendingBalance[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BridgeWveduCoin.sol\":1140:1269  function depositToOtherSide(address account, uint256 amount) public onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_43\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_64\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_66\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_46\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BridgeWveduCoin.sol\":933:1132  function withdraw(wVedu to, uint256 amount) public {... */\n    tag_40:\n        /* \"contracts/BridgeWveduCoin.sol\":1033:1039  amount */\n      dup1\n        /* \"contracts/BridgeWveduCoin.sol\":1003:1017  pendingBalance */\n      0x02\n        /* \"contracts/BridgeWveduCoin.sol\":1003:1029  pendingBalance[msg.sender] */\n      0x00\n        /* \"contracts/BridgeWveduCoin.sol\":1018:1028  msg.sender */\n      caller\n        /* \"contracts/BridgeWveduCoin.sol\":1003:1029  pendingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BridgeWveduCoin.sol\":1003:1039  pendingBalance[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/BridgeWveduCoin.sol\":995:1040  require(pendingBalance[msg.sender] >= amount) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/BridgeWveduCoin.sol\":1081:1087  amount */\n      dup1\n        /* \"contracts/BridgeWveduCoin.sol\":1051:1065  pendingBalance */\n      0x02\n        /* \"contracts/BridgeWveduCoin.sol\":1051:1077  pendingBalance[msg.sender] */\n      0x00\n        /* \"contracts/BridgeWveduCoin.sol\":1066:1076  msg.sender */\n      caller\n        /* \"contracts/BridgeWveduCoin.sol\":1051:1077  pendingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/BridgeWveduCoin.sol\":1051:1087  pendingBalance[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BridgeWveduCoin.sol\":1098:1100  to */\n      dup2\n        /* \"contracts/BridgeWveduCoin.sol\":1098:1105  to.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/BridgeWveduCoin.sol\":1106:1116  msg.sender */\n      caller\n        /* \"contracts/BridgeWveduCoin.sol\":1117:1123  amount */\n      dup4\n        /* \"contracts/BridgeWveduCoin.sol\":1098:1124  to.mint(msg.sender,amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_71:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/BridgeWveduCoin.sol\":933:1132  function withdraw(wVedu to, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_21\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_79\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_85:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_87:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_88:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_106\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_87\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_89:\n        /* \"#utility.yul\":641:665   */\n      tag_108\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_88\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_109:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_90:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_111\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_89\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_114\n      tag_85\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":917:1036   */\n    tag_113:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_115\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_90\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_91:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_92:\n        /* \"#utility.yul\":1346:1370   */\n      tag_118\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_91\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_17:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_120\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_92\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_93:\n        /* \"#utility.yul\":1698:1722   */\n      tag_122\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_88\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_23:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_124\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_93\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2072   */\n    tag_94:\n        /* \"#utility.yul\":2013:2020   */\n      0x00\n        /* \"#utility.yul\":2042:2066   */\n      tag_126\n        /* \"#utility.yul\":2060:2065   */\n      dup3\n        /* \"#utility.yul\":2042:2066   */\n      tag_88\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2031:2066   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2078:2226   */\n    tag_95:\n        /* \"#utility.yul\":2164:2201   */\n      tag_128\n        /* \"#utility.yul\":2195:2200   */\n      dup2\n        /* \"#utility.yul\":2164:2201   */\n      tag_94\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2157:2162   */\n      dup2\n        /* \"#utility.yul\":2154:2202   */\n      eq\n        /* \"#utility.yul\":2144:2220   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2213:2214   */\n      dup1\n        /* \"#utility.yul\":2206:2218   */\n      revert\n        /* \"#utility.yul\":2144:2220   */\n    tag_129:\n        /* \"#utility.yul\":2078:2226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2232:2397   */\n    tag_96:\n        /* \"#utility.yul\":2291:2296   */\n      0x00\n        /* \"#utility.yul\":2329:2335   */\n      dup2\n        /* \"#utility.yul\":2316:2336   */\n      calldataload\n        /* \"#utility.yul\":2307:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":2345:2391   */\n      tag_131\n        /* \"#utility.yul\":2385:2390   */\n      dup2\n        /* \"#utility.yul\":2345:2391   */\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2232:2397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2403:2525   */\n    tag_97:\n        /* \"#utility.yul\":2476:2500   */\n      tag_133\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2476:2500   */\n      tag_91\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2466:2501   */\n      eq\n        /* \"#utility.yul\":2456:2519   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2515:2516   */\n      0x00\n        /* \"#utility.yul\":2512:2513   */\n      dup1\n        /* \"#utility.yul\":2505:2517   */\n      revert\n        /* \"#utility.yul\":2456:2519   */\n    tag_134:\n        /* \"#utility.yul\":2403:2525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2531:2670   */\n    tag_98:\n        /* \"#utility.yul\":2577:2582   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup2\n        /* \"#utility.yul\":2602:2622   */\n      calldataload\n        /* \"#utility.yul\":2593:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2631:2664   */\n      tag_136\n        /* \"#utility.yul\":2658:2663   */\n      dup2\n        /* \"#utility.yul\":2631:2664   */\n      tag_97\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2531:2670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:3176   */\n    tag_29:\n        /* \"#utility.yul\":2757:2763   */\n      0x00\n        /* \"#utility.yul\":2765:2771   */\n      dup1\n        /* \"#utility.yul\":2814:2816   */\n      0x40\n        /* \"#utility.yul\":2802:2811   */\n      dup4\n        /* \"#utility.yul\":2793:2800   */\n      dup6\n        /* \"#utility.yul\":2789:2812   */\n      sub\n        /* \"#utility.yul\":2785:2817   */\n      slt\n        /* \"#utility.yul\":2782:2901   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2820:2899   */\n      tag_139\n      tag_85\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2782:2901   */\n    tag_138:\n        /* \"#utility.yul\":2940:2941   */\n      0x00\n        /* \"#utility.yul\":2965:3031   */\n      tag_140\n        /* \"#utility.yul\":3023:3030   */\n      dup6\n        /* \"#utility.yul\":3014:3020   */\n      dup3\n        /* \"#utility.yul\":3003:3012   */\n      dup7\n        /* \"#utility.yul\":2999:3021   */\n      add\n        /* \"#utility.yul\":2965:3031   */\n      tag_96\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2955:3031   */\n      swap3\n      pop\n        /* \"#utility.yul\":2911:3041   */\n      pop\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3106:3159   */\n      tag_141\n        /* \"#utility.yul\":3151:3158   */\n      dup6\n        /* \"#utility.yul\":3142:3148   */\n      dup3\n        /* \"#utility.yul\":3131:3140   */\n      dup7\n        /* \"#utility.yul\":3127:3149   */\n      add\n        /* \"#utility.yul\":3106:3159   */\n      tag_98\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3096:3159   */\n      swap2\n      pop\n        /* \"#utility.yul\":3051:3169   */\n      pop\n        /* \"#utility.yul\":2676:3176   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3656   */\n    tag_33:\n        /* \"#utility.yul\":3250:3256   */\n      0x00\n        /* \"#utility.yul\":3258:3264   */\n      dup1\n        /* \"#utility.yul\":3307:3309   */\n      0x40\n        /* \"#utility.yul\":3295:3304   */\n      dup4\n        /* \"#utility.yul\":3286:3293   */\n      dup6\n        /* \"#utility.yul\":3282:3305   */\n      sub\n        /* \"#utility.yul\":3278:3310   */\n      slt\n        /* \"#utility.yul\":3275:3394   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":3313:3392   */\n      tag_144\n      tag_85\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3275:3394   */\n    tag_143:\n        /* \"#utility.yul\":3433:3434   */\n      0x00\n        /* \"#utility.yul\":3458:3511   */\n      tag_145\n        /* \"#utility.yul\":3503:3510   */\n      dup6\n        /* \"#utility.yul\":3494:3500   */\n      dup3\n        /* \"#utility.yul\":3483:3492   */\n      dup7\n        /* \"#utility.yul\":3479:3501   */\n      add\n        /* \"#utility.yul\":3458:3511   */\n      tag_90\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3448:3511   */\n      swap3\n      pop\n        /* \"#utility.yul\":3404:3521   */\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3586:3639   */\n      tag_146\n        /* \"#utility.yul\":3631:3638   */\n      dup6\n        /* \"#utility.yul\":3622:3628   */\n      dup3\n        /* \"#utility.yul\":3611:3620   */\n      dup7\n        /* \"#utility.yul\":3607:3629   */\n      add\n        /* \"#utility.yul\":3586:3639   */\n      tag_98\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3576:3639   */\n      swap2\n      pop\n        /* \"#utility.yul\":3531:3649   */\n      pop\n        /* \"#utility.yul\":3182:3656   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3662:3994   */\n    tag_51:\n        /* \"#utility.yul\":3783:3787   */\n      0x00\n        /* \"#utility.yul\":3821:3823   */\n      0x40\n        /* \"#utility.yul\":3810:3819   */\n      dup3\n        /* \"#utility.yul\":3806:3824   */\n      add\n        /* \"#utility.yul\":3798:3824   */\n      swap1\n      pop\n        /* \"#utility.yul\":3834:3905   */\n      tag_148\n        /* \"#utility.yul\":3902:3903   */\n      0x00\n        /* \"#utility.yul\":3891:3900   */\n      dup4\n        /* \"#utility.yul\":3887:3904   */\n      add\n        /* \"#utility.yul\":3878:3884   */\n      dup6\n        /* \"#utility.yul\":3834:3905   */\n      tag_93\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3915:3987   */\n      tag_149\n        /* \"#utility.yul\":3983:3985   */\n      0x20\n        /* \"#utility.yul\":3972:3981   */\n      dup4\n        /* \"#utility.yul\":3968:3986   */\n      add\n        /* \"#utility.yul\":3959:3965   */\n      dup5\n        /* \"#utility.yul\":3915:3987   */\n      tag_92\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3662:3994   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4000:4180   */\n    tag_99:\n        /* \"#utility.yul\":4048:4125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4045:4046   */\n      0x00\n        /* \"#utility.yul\":4038:4126   */\n      mstore\n        /* \"#utility.yul\":4145:4149   */\n      0x11\n        /* \"#utility.yul\":4142:4143   */\n      0x04\n        /* \"#utility.yul\":4135:4150   */\n      mstore\n        /* \"#utility.yul\":4169:4173   */\n      0x24\n        /* \"#utility.yul\":4166:4167   */\n      0x00\n        /* \"#utility.yul\":4159:4174   */\n      revert\n        /* \"#utility.yul\":4186:4377   */\n    tag_60:\n        /* \"#utility.yul\":4226:4229   */\n      0x00\n        /* \"#utility.yul\":4245:4265   */\n      tag_152\n        /* \"#utility.yul\":4263:4264   */\n      dup3\n        /* \"#utility.yul\":4245:4265   */\n      tag_91\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4240:4265   */\n      swap2\n      pop\n        /* \"#utility.yul\":4279:4299   */\n      tag_153\n        /* \"#utility.yul\":4297:4298   */\n      dup4\n        /* \"#utility.yul\":4279:4299   */\n      tag_91\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4274:4299   */\n      swap3\n      pop\n        /* \"#utility.yul\":4322:4323   */\n      dup3\n        /* \"#utility.yul\":4319:4320   */\n      dup3\n        /* \"#utility.yul\":4315:4324   */\n      add\n        /* \"#utility.yul\":4308:4324   */\n      swap1\n      pop\n        /* \"#utility.yul\":4343:4346   */\n      dup1\n        /* \"#utility.yul\":4340:4341   */\n      dup3\n        /* \"#utility.yul\":4337:4347   */\n      gt\n        /* \"#utility.yul\":4334:4370   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4350:4368   */\n      tag_155\n      tag_99\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4334:4370   */\n    tag_154:\n        /* \"#utility.yul\":4186:4377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4383:4577   */\n    tag_70:\n        /* \"#utility.yul\":4423:4427   */\n      0x00\n        /* \"#utility.yul\":4443:4463   */\n      tag_157\n        /* \"#utility.yul\":4461:4462   */\n      dup3\n        /* \"#utility.yul\":4443:4463   */\n      tag_91\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4438:4463   */\n      swap2\n      pop\n        /* \"#utility.yul\":4477:4497   */\n      tag_158\n        /* \"#utility.yul\":4495:4496   */\n      dup4\n        /* \"#utility.yul\":4477:4497   */\n      tag_91\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4472:4497   */\n      swap3\n      pop\n        /* \"#utility.yul\":4521:4522   */\n      dup3\n        /* \"#utility.yul\":4518:4519   */\n      dup3\n        /* \"#utility.yul\":4514:4523   */\n      sub\n        /* \"#utility.yul\":4506:4523   */\n      swap1\n      pop\n        /* \"#utility.yul\":4545:4546   */\n      dup2\n        /* \"#utility.yul\":4539:4543   */\n      dup2\n        /* \"#utility.yul\":4536:4547   */\n      gt\n        /* \"#utility.yul\":4533:4570   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":4550:4568   */\n      tag_160\n      tag_99\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4533:4570   */\n    tag_159:\n        /* \"#utility.yul\":4383:4577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200298a06733bf0ac2314b70c9e1b3d702c317357f0da1006ca4f066d50cc9af1e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_130": {
									"entryPoint": null,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_359": {
									"entryPoint": 248,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:5",
										"nodeType": "YulBlock",
										"src": "0:1551:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nativeSrc": "1267:53:5",
													"nodeType": "YulBlock",
													"src": "1267:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:5"
																		},
																		"nativeSrc": "1289:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nativeSrc": "1277:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:5"
															},
															"nativeSrc": "1277:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:5",
														"nodeType": "YulTypedName",
														"src": "1255:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:5",
														"nodeType": "YulTypedName",
														"src": "1262:3:5",
														"type": ""
													}
												],
												"src": "1202:118:5"
											},
											{
												"body": {
													"nativeSrc": "1424:124:5",
													"nodeType": "YulBlock",
													"src": "1424:124:5",
													"statements": [
														{
															"nativeSrc": "1434:26:5",
															"nodeType": "YulAssignment",
															"src": "1434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:5"
																},
																"nativeSrc": "1442:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:5"
																		},
																		"nativeSrc": "1523:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:5"
																},
																"nativeSrc": "1470:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:5"
															},
															"nativeSrc": "1470:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:5",
														"nodeType": "YulTypedName",
														"src": "1396:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:5",
														"nodeType": "YulTypedName",
														"src": "1408:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:5",
														"nodeType": "YulTypedName",
														"src": "1419:4:5",
														"type": ""
													}
												],
												"src": "1326:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610b5a380380610b5a83398181016040528101906100319190610217565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610251565b60405180910390fd5b6100b1816100f860201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061026a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e6826101bd565b9050919050565b6101f6816101dc565b8114610200575f80fd5b50565b5f81519050610211816101ed565b92915050565b5f6020828403121561022c5761022b6101b9565b5b5f61023984828501610203565b91505092915050565b61024b816101dc565b82525050565b5f6020820190506102645f830184610242565b92915050565b6108e3806102775f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c80639dc29fac116100595780639dc29fac14610100578063c3fda31a1461011c578063f2fde38b14610138578063f3fef3a31461015457610086565b80633736f85d1461008a578063715018a6146100ba5780638da5cb5b146100c45780639d76ea58146100e2575b5f80fd5b6100a4600480360381019061009f919061068e565b610170565b6040516100b191906106d1565b60405180910390f35b6100c2610185565b005b6100cc610198565b6040516100d991906106f9565b60405180910390f35b6100ea6101bf565b6040516100f791906106f9565b60405180910390f35b61011a60048036038101906101159190610777565b6101e4565b005b610136600480360381019061013191906107b5565b6102f6565b005b610152600480360381019061014d919061068e565b610355565b005b61016e60048036038101906101699190610777565b6103d9565b005b6002602052805f5260405f205f915090505481565b61018d6104e1565b6101965f610568565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461023c575f80fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016102779291906107f3565b5f604051808303815f87803b15801561028e575f80fd5b505af11580156102a0573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516102ea91906106d1565b60405180910390a25050565b6102fe6104e1565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034a9190610847565b925050819055505050565b61035d6104e1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103cd575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103c491906106f9565b60405180910390fd5b6103d681610568565b50565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610422575f80fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461046e919061087a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016104b09291906107f3565b5f604051808303815f87803b1580156104c7575f80fd5b505af11580156104d9573d5f803e3d5ffd5b505050505050565b6104e9610629565b73ffffffffffffffffffffffffffffffffffffffff16610507610198565b73ffffffffffffffffffffffffffffffffffffffff16146105665761052a610629565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161055d91906106f9565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61065d82610634565b9050919050565b61066d81610653565b8114610677575f80fd5b50565b5f8135905061068881610664565b92915050565b5f602082840312156106a3576106a2610630565b5b5f6106b08482850161067a565b91505092915050565b5f819050919050565b6106cb816106b9565b82525050565b5f6020820190506106e45f8301846106c2565b92915050565b6106f381610653565b82525050565b5f60208201905061070c5f8301846106ea565b92915050565b5f61071c82610653565b9050919050565b61072c81610712565b8114610736575f80fd5b50565b5f8135905061074781610723565b92915050565b610756816106b9565b8114610760575f80fd5b50565b5f813590506107718161074d565b92915050565b5f806040838503121561078d5761078c610630565b5b5f61079a85828601610739565b92505060206107ab85828601610763565b9150509250929050565b5f80604083850312156107cb576107ca610630565b5b5f6107d88582860161067a565b92505060206107e985828601610763565b9150509250929050565b5f6040820190506108065f8301856106ea565b61081360208301846106c2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610851826106b9565b915061085c836106b9565b92508282019050808211156108745761087361081a565b5b92915050565b5f610884826106b9565b915061088f836106b9565b92508282039050818111156108a7576108a661081a565b5b9291505056fea26469706673582212200298a06733bf0ac2314b70c9e1b3d702c317357f0da1006ca4f066d50cc9af1e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB5A CODESIZE SUB DUP1 PUSH2 0xB5A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x26A JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6 DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6 DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP2 EQ PUSH2 0x200 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x211 DUP2 PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239 DUP5 DUP3 DUP6 ADD PUSH2 0x203 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264 PUSH0 DUP4 ADD DUP5 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E3 DUP1 PUSH2 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC3FDA31A EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x154 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3736F85D EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x196 PUSH0 PUSH2 0x568 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x4E1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x35D PUSH2 0x4E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x568 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x629 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x507 PUSH2 0x198 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x566 JUMPI PUSH2 0x52A PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65D DUP3 PUSH2 0x634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66D DUP2 PUSH2 0x653 JUMP JUMPDEST DUP2 EQ PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x688 DUP2 PUSH2 0x664 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6B0 DUP5 DUP3 DUP6 ADD PUSH2 0x67A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CB DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70C PUSH0 DUP4 ADD DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71C DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72C DUP2 PUSH2 0x712 JUMP JUMPDEST DUP2 EQ PUSH2 0x736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x747 DUP2 PUSH2 0x723 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x756 DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x771 DUP2 PUSH2 0x74D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79A DUP6 DUP3 DUP7 ADD PUSH2 0x739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7AB DUP6 DUP3 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7CA PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D8 DUP6 DUP3 DUP7 ADD PUSH2 0x67A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E9 DUP6 DUP3 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x806 PUSH0 DUP4 ADD DUP6 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x813 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x851 DUP3 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x85C DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x81A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x884 DUP3 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x88F DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8A7 JUMPI PUSH2 0x8A6 PUSH2 0x81A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SWAP9 LOG0 PUSH8 0x33BF0AC2314B70C9 0xE1 0xB3 0xD7 MUL 0xC3 OR CALLDATALOAD PUSH32 0xDA1006CA4F066D50CC9AF1E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "392:880:2:-:0;;;618:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;661:10;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;699:13:2::1;684:12;;:28;;;;;;;;;;;;;;;;;;618:102:::0;392:880;;2912:187:3;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;392:880:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_297": {
									"entryPoint": 1249,
									"id": 297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_372": {
									"entryPoint": 1577,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_359": {
									"entryPoint": 1384,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_162": {
									"entryPoint": 484,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositToOtherSide_211": {
									"entryPoint": 758,
									"id": 211,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_280": {
									"entryPoint": 408,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingBalance_116": {
									"entryPoint": 368,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_311": {
									"entryPoint": 389,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_106": {
									"entryPoint": 447,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_339": {
									"entryPoint": 853,
									"id": 339,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_195": {
									"entryPoint": 985,
									"id": 195,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_wVedu_$102": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_wVedu_$102t_uint256": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_wVedu_$102": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_wVedu_$102": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4580:5",
										"nodeType": "YulBlock",
										"src": "0:4580:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1481:124:5",
													"nodeType": "YulBlock",
													"src": "1481:124:5",
													"statements": [
														{
															"nativeSrc": "1491:26:5",
															"nodeType": "YulAssignment",
															"src": "1491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:5"
																},
																"nativeSrc": "1499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:5"
																		},
																		"nativeSrc": "1580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:5"
																},
																"nativeSrc": "1527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:5"
															},
															"nativeSrc": "1527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:5",
														"nodeType": "YulTypedName",
														"src": "1453:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:5",
														"nodeType": "YulTypedName",
														"src": "1465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:5",
														"nodeType": "YulTypedName",
														"src": "1476:4:5",
														"type": ""
													}
												],
												"src": "1383:222:5"
											},
											{
												"body": {
													"nativeSrc": "1676:53:5",
													"nodeType": "YulBlock",
													"src": "1676:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:5"
																		},
																		"nativeSrc": "1698:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:5"
																},
																"nativeSrc": "1686:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:5"
															},
															"nativeSrc": "1686:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:5",
														"nodeType": "YulTypedName",
														"src": "1664:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:5",
														"nodeType": "YulTypedName",
														"src": "1671:3:5",
														"type": ""
													}
												],
												"src": "1611:118:5"
											},
											{
												"body": {
													"nativeSrc": "1833:124:5",
													"nodeType": "YulBlock",
													"src": "1833:124:5",
													"statements": [
														{
															"nativeSrc": "1843:26:5",
															"nodeType": "YulAssignment",
															"src": "1843:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:5"
																},
																"nativeSrc": "1851:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:5"
																		},
																		"nativeSrc": "1932:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:5"
																},
																"nativeSrc": "1879:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:5"
															},
															"nativeSrc": "1879:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:5",
														"nodeType": "YulTypedName",
														"src": "1805:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:5",
														"nodeType": "YulTypedName",
														"src": "1817:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:5",
														"nodeType": "YulTypedName",
														"src": "1828:4:5",
														"type": ""
													}
												],
												"src": "1735:222:5"
											},
											{
												"body": {
													"nativeSrc": "2021:51:5",
													"nodeType": "YulBlock",
													"src": "2021:51:5",
													"statements": [
														{
															"nativeSrc": "2031:35:5",
															"nodeType": "YulAssignment",
															"src": "2031:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2060:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2060:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "2042:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:5"
																},
																"nativeSrc": "2042:24:5",
																"nodeType": "YulFunctionCall",
																"src": "2042:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2031:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2031:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_wVedu_$102",
												"nativeSrc": "1963:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2003:5:5",
														"nodeType": "YulTypedName",
														"src": "2003:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2013:7:5",
														"nodeType": "YulTypedName",
														"src": "2013:7:5",
														"type": ""
													}
												],
												"src": "1963:109:5"
											},
											{
												"body": {
													"nativeSrc": "2134:92:5",
													"nodeType": "YulBlock",
													"src": "2134:92:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2204:16:5",
																"nodeType": "YulBlock",
																"src": "2204:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2206:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2206:6:5"
																			},
																			"nativeSrc": "2206:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2206:12:5"
																		},
																		"nativeSrc": "2206:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2206:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2157:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2157:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2195:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2195:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_wVedu_$102",
																					"nativeSrc": "2164:30:5",
																					"nodeType": "YulIdentifier",
																					"src": "2164:30:5"
																				},
																				"nativeSrc": "2164:37:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:37:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2154:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2154:2:5"
																		},
																		"nativeSrc": "2154:48:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2154:48:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2147:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:5"
																},
																"nativeSrc": "2147:56:5",
																"nodeType": "YulFunctionCall",
																"src": "2147:56:5"
															},
															"nativeSrc": "2144:76:5",
															"nodeType": "YulIf",
															"src": "2144:76:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_wVedu_$102",
												"nativeSrc": "2078:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2127:5:5",
														"nodeType": "YulTypedName",
														"src": "2127:5:5",
														"type": ""
													}
												],
												"src": "2078:148:5"
											},
											{
												"body": {
													"nativeSrc": "2297:100:5",
													"nodeType": "YulBlock",
													"src": "2297:100:5",
													"statements": [
														{
															"nativeSrc": "2307:29:5",
															"nodeType": "YulAssignment",
															"src": "2307:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2329:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2329:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2316:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2316:12:5"
																},
																"nativeSrc": "2316:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2316:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2307:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2307:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_wVedu_$102",
																	"nativeSrc": "2345:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "2345:39:5"
																},
																"nativeSrc": "2345:46:5",
																"nodeType": "YulFunctionCall",
																"src": "2345:46:5"
															},
															"nativeSrc": "2345:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "2345:46:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_wVedu_$102",
												"nativeSrc": "2232:165:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2275:6:5",
														"nodeType": "YulTypedName",
														"src": "2275:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2283:3:5",
														"nodeType": "YulTypedName",
														"src": "2283:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2291:5:5",
														"nodeType": "YulTypedName",
														"src": "2291:5:5",
														"type": ""
													}
												],
												"src": "2232:165:5"
											},
											{
												"body": {
													"nativeSrc": "2446:79:5",
													"nodeType": "YulBlock",
													"src": "2446:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2503:16:5",
																"nodeType": "YulBlock",
																"src": "2503:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2512:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2512:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2515:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2505:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2505:6:5"
																			},
																			"nativeSrc": "2505:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2505:12:5"
																		},
																		"nativeSrc": "2505:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2469:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2494:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2494:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2476:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2476:17:5"
																				},
																				"nativeSrc": "2476:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2476:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2466:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2466:2:5"
																		},
																		"nativeSrc": "2466:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2466:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2459:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2459:6:5"
																},
																"nativeSrc": "2459:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2459:43:5"
															},
															"nativeSrc": "2456:63:5",
															"nodeType": "YulIf",
															"src": "2456:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2403:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2439:5:5",
														"nodeType": "YulTypedName",
														"src": "2439:5:5",
														"type": ""
													}
												],
												"src": "2403:122:5"
											},
											{
												"body": {
													"nativeSrc": "2583:87:5",
													"nodeType": "YulBlock",
													"src": "2583:87:5",
													"statements": [
														{
															"nativeSrc": "2593:29:5",
															"nodeType": "YulAssignment",
															"src": "2593:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2615:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2615:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2602:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2602:12:5"
																},
																"nativeSrc": "2602:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2602:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2593:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2593:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2658:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2658:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2631:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2631:26:5"
																},
																"nativeSrc": "2631:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2631:33:5"
															},
															"nativeSrc": "2631:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2631:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2531:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2561:6:5",
														"nodeType": "YulTypedName",
														"src": "2561:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2569:3:5",
														"nodeType": "YulTypedName",
														"src": "2569:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2577:5:5",
														"nodeType": "YulTypedName",
														"src": "2577:5:5",
														"type": ""
													}
												],
												"src": "2531:139:5"
											},
											{
												"body": {
													"nativeSrc": "2772:404:5",
													"nodeType": "YulBlock",
													"src": "2772:404:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2818:83:5",
																"nodeType": "YulBlock",
																"src": "2818:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2820:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2820:77:5"
																			},
																			"nativeSrc": "2820:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2820:79:5"
																		},
																		"nativeSrc": "2820:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2820:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2793:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2793:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2802:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2802:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2789:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:5"
																		},
																		"nativeSrc": "2789:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2789:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2814:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2814:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2785:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:5"
																},
																"nativeSrc": "2785:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2785:32:5"
															},
															"nativeSrc": "2782:119:5",
															"nodeType": "YulIf",
															"src": "2782:119:5"
														},
														{
															"nativeSrc": "2911:130:5",
															"nodeType": "YulBlock",
															"src": "2911:130:5",
															"statements": [
																{
																	"nativeSrc": "2926:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2926:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2940:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2940:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2930:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2930:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2955:76:5",
																	"nodeType": "YulAssignment",
																	"src": "2955:76:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3003:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3003:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3014:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3014:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2999:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2999:3:5"
																				},
																				"nativeSrc": "2999:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2999:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3023:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3023:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_wVedu_$102",
																			"nativeSrc": "2965:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "2965:33:5"
																		},
																		"nativeSrc": "2965:66:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:66:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2955:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2955:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3051:118:5",
															"nodeType": "YulBlock",
															"src": "3051:118:5",
															"statements": [
																{
																	"nativeSrc": "3066:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3066:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3080:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3080:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3070:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3070:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3096:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3096:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3131:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3131:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3142:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3142:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3127:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3127:3:5"
																				},
																				"nativeSrc": "3127:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3151:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3151:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3106:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3106:20:5"
																		},
																		"nativeSrc": "3106:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3106:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3096:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_wVedu_$102t_uint256",
												"nativeSrc": "2676:500:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2734:9:5",
														"nodeType": "YulTypedName",
														"src": "2734:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2745:7:5",
														"nodeType": "YulTypedName",
														"src": "2745:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2757:6:5",
														"nodeType": "YulTypedName",
														"src": "2757:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2765:6:5",
														"nodeType": "YulTypedName",
														"src": "2765:6:5",
														"type": ""
													}
												],
												"src": "2676:500:5"
											},
											{
												"body": {
													"nativeSrc": "3265:391:5",
													"nodeType": "YulBlock",
													"src": "3265:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3311:83:5",
																"nodeType": "YulBlock",
																"src": "3311:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3313:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3313:77:5"
																			},
																			"nativeSrc": "3313:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3313:79:5"
																		},
																		"nativeSrc": "3313:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3286:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3286:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3295:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3295:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:5"
																		},
																		"nativeSrc": "3282:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3307:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3307:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3278:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:5"
																},
																"nativeSrc": "3278:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3278:32:5"
															},
															"nativeSrc": "3275:119:5",
															"nodeType": "YulIf",
															"src": "3275:119:5"
														},
														{
															"nativeSrc": "3404:117:5",
															"nodeType": "YulBlock",
															"src": "3404:117:5",
															"statements": [
																{
																	"nativeSrc": "3419:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3419:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3433:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3433:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3423:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3423:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3448:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3448:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3483:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3483:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3494:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3494:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3479:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3479:3:5"
																				},
																				"nativeSrc": "3479:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3479:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3503:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3458:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3458:20:5"
																		},
																		"nativeSrc": "3458:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3458:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3448:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3448:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3531:118:5",
															"nodeType": "YulBlock",
															"src": "3531:118:5",
															"statements": [
																{
																	"nativeSrc": "3546:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3546:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3560:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3550:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3550:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3576:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3576:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3611:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3611:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3622:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3622:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3607:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3607:3:5"
																				},
																				"nativeSrc": "3607:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3607:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3631:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3631:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3586:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3586:20:5"
																		},
																		"nativeSrc": "3586:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3576:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3576:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3182:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3227:9:5",
														"nodeType": "YulTypedName",
														"src": "3227:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3238:7:5",
														"nodeType": "YulTypedName",
														"src": "3238:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3250:6:5",
														"nodeType": "YulTypedName",
														"src": "3250:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3258:6:5",
														"nodeType": "YulTypedName",
														"src": "3258:6:5",
														"type": ""
													}
												],
												"src": "3182:474:5"
											},
											{
												"body": {
													"nativeSrc": "3788:206:5",
													"nodeType": "YulBlock",
													"src": "3788:206:5",
													"statements": [
														{
															"nativeSrc": "3798:26:5",
															"nodeType": "YulAssignment",
															"src": "3798:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3810:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3821:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3806:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3806:3:5"
																},
																"nativeSrc": "3806:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3806:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3798:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3798:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3878:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3878:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3891:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3891:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3902:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3902:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3887:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:5"
																		},
																		"nativeSrc": "3887:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3834:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3834:43:5"
																},
																"nativeSrc": "3834:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3834:71:5"
															},
															"nativeSrc": "3834:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3834:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3959:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3959:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3972:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3972:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3983:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3983:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3968:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:5"
																		},
																		"nativeSrc": "3968:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3968:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3915:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3915:43:5"
																},
																"nativeSrc": "3915:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3915:72:5"
															},
															"nativeSrc": "3915:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3915:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3662:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3752:9:5",
														"nodeType": "YulTypedName",
														"src": "3752:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3764:6:5",
														"nodeType": "YulTypedName",
														"src": "3764:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3772:6:5",
														"nodeType": "YulTypedName",
														"src": "3772:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3783:4:5",
														"nodeType": "YulTypedName",
														"src": "3783:4:5",
														"type": ""
													}
												],
												"src": "3662:332:5"
											},
											{
												"body": {
													"nativeSrc": "4028:152:5",
													"nodeType": "YulBlock",
													"src": "4028:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4045:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4045:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4048:77:5",
																		"nodeType": "YulLiteral",
																		"src": "4048:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:5"
																},
																"nativeSrc": "4038:88:5",
																"nodeType": "YulFunctionCall",
																"src": "4038:88:5"
															},
															"nativeSrc": "4038:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "4038:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4142:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4142:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4145:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4145:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4135:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:5"
																},
																"nativeSrc": "4135:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4135:15:5"
															},
															"nativeSrc": "4135:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4135:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4166:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4166:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4169:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4169:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4159:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:5"
																},
																"nativeSrc": "4159:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4159:15:5"
															},
															"nativeSrc": "4159:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "4159:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4000:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4000:180:5"
											},
											{
												"body": {
													"nativeSrc": "4230:147:5",
													"nodeType": "YulBlock",
													"src": "4230:147:5",
													"statements": [
														{
															"nativeSrc": "4240:25:5",
															"nodeType": "YulAssignment",
															"src": "4240:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4263:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4263:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4245:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4245:17:5"
																},
																"nativeSrc": "4245:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4245:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4240:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4240:1:5"
																}
															]
														},
														{
															"nativeSrc": "4274:25:5",
															"nodeType": "YulAssignment",
															"src": "4274:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4297:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4297:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4279:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4279:17:5"
																},
																"nativeSrc": "4279:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4279:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4274:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4274:1:5"
																}
															]
														},
														{
															"nativeSrc": "4308:16:5",
															"nodeType": "YulAssignment",
															"src": "4308:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4319:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4319:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4322:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4322:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4315:3:5"
																},
																"nativeSrc": "4315:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4315:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4308:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4348:22:5",
																"nodeType": "YulBlock",
																"src": "4348:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4350:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4350:16:5"
																			},
																			"nativeSrc": "4350:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4350:18:5"
																		},
																		"nativeSrc": "4350:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4350:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4340:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4340:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4343:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4343:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4337:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4337:2:5"
																},
																"nativeSrc": "4337:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4337:10:5"
															},
															"nativeSrc": "4334:36:5",
															"nodeType": "YulIf",
															"src": "4334:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4186:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4217:1:5",
														"nodeType": "YulTypedName",
														"src": "4217:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4220:1:5",
														"nodeType": "YulTypedName",
														"src": "4220:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4226:3:5",
														"nodeType": "YulTypedName",
														"src": "4226:3:5",
														"type": ""
													}
												],
												"src": "4186:191:5"
											},
											{
												"body": {
													"nativeSrc": "4428:149:5",
													"nodeType": "YulBlock",
													"src": "4428:149:5",
													"statements": [
														{
															"nativeSrc": "4438:25:5",
															"nodeType": "YulAssignment",
															"src": "4438:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4461:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4461:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4443:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4443:17:5"
																},
																"nativeSrc": "4443:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4443:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4438:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4438:1:5"
																}
															]
														},
														{
															"nativeSrc": "4472:25:5",
															"nodeType": "YulAssignment",
															"src": "4472:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4495:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4495:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4477:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4477:17:5"
																},
																"nativeSrc": "4477:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4477:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4472:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "4472:1:5"
																}
															]
														},
														{
															"nativeSrc": "4506:17:5",
															"nodeType": "YulAssignment",
															"src": "4506:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4518:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4518:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4521:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4521:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4514:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4514:3:5"
																},
																"nativeSrc": "4514:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4514:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4506:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4506:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4548:22:5",
																"nodeType": "YulBlock",
																"src": "4548:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4550:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4550:16:5"
																			},
																			"nativeSrc": "4550:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4550:18:5"
																		},
																		"nativeSrc": "4550:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4550:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4539:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4539:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4545:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4545:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4536:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4536:2:5"
																},
																"nativeSrc": "4536:11:5",
																"nodeType": "YulFunctionCall",
																"src": "4536:11:5"
															},
															"nativeSrc": "4533:37:5",
															"nodeType": "YulIf",
															"src": "4533:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4383:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4414:1:5",
														"nodeType": "YulTypedName",
														"src": "4414:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4417:1:5",
														"nodeType": "YulTypedName",
														"src": "4417:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4423:4:5",
														"nodeType": "YulTypedName",
														"src": "4423:4:5",
														"type": ""
													}
												],
												"src": "4383:194:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_wVedu_$102(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_wVedu_$102(value) {\n        if iszero(eq(value, cleanup_t_contract$_wVedu_$102(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_wVedu_$102(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_wVedu_$102(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_wVedu_$102t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_wVedu_$102(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c80639dc29fac116100595780639dc29fac14610100578063c3fda31a1461011c578063f2fde38b14610138578063f3fef3a31461015457610086565b80633736f85d1461008a578063715018a6146100ba5780638da5cb5b146100c45780639d76ea58146100e2575b5f80fd5b6100a4600480360381019061009f919061068e565b610170565b6040516100b191906106d1565b60405180910390f35b6100c2610185565b005b6100cc610198565b6040516100d991906106f9565b60405180910390f35b6100ea6101bf565b6040516100f791906106f9565b60405180910390f35b61011a60048036038101906101159190610777565b6101e4565b005b610136600480360381019061013191906107b5565b6102f6565b005b610152600480360381019061014d919061068e565b610355565b005b61016e60048036038101906101699190610777565b6103d9565b005b6002602052805f5260405f205f915090505481565b61018d6104e1565b6101965f610568565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461023c575f80fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b81526004016102779291906107f3565b5f604051808303815f87803b15801561028e575f80fd5b505af11580156102a0573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516102ea91906106d1565b60405180910390a25050565b6102fe6104e1565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461034a9190610847565b925050819055505050565b61035d6104e1565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103cd575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103c491906106f9565b60405180910390fd5b6103d681610568565b50565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610422575f80fd5b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461046e919061087a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016104b09291906107f3565b5f604051808303815f87803b1580156104c7575f80fd5b505af11580156104d9573d5f803e3d5ffd5b505050505050565b6104e9610629565b73ffffffffffffffffffffffffffffffffffffffff16610507610198565b73ffffffffffffffffffffffffffffffffffffffff16146105665761052a610629565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161055d91906106f9565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61065d82610634565b9050919050565b61066d81610653565b8114610677575f80fd5b50565b5f8135905061068881610664565b92915050565b5f602082840312156106a3576106a2610630565b5b5f6106b08482850161067a565b91505092915050565b5f819050919050565b6106cb816106b9565b82525050565b5f6020820190506106e45f8301846106c2565b92915050565b6106f381610653565b82525050565b5f60208201905061070c5f8301846106ea565b92915050565b5f61071c82610653565b9050919050565b61072c81610712565b8114610736575f80fd5b50565b5f8135905061074781610723565b92915050565b610756816106b9565b8114610760575f80fd5b50565b5f813590506107718161074d565b92915050565b5f806040838503121561078d5761078c610630565b5b5f61079a85828601610739565b92505060206107ab85828601610763565b9150509250929050565b5f80604083850312156107cb576107ca610630565b5b5f6107d88582860161067a565b92505060206107e985828601610763565b9150509250929050565b5f6040820190506108065f8301856106ea565b61081360208301846106c2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610851826106b9565b915061085c836106b9565b92508282019050808211156108745761087361081a565b5b92915050565b5f610884826106b9565b915061088f836106b9565b92508282039050818111156108a7576108a661081a565b5b9291505056fea26469706673582212200298a06733bf0ac2314b70c9e1b3d702c317357f0da1006ca4f066d50cc9af1e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xC3FDA31A EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x154 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3736F85D EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x196 PUSH0 PUSH2 0x568 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x277 SWAP3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x2FE PUSH2 0x4E1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x35D PUSH2 0x4E1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x568 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x87A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP3 SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x629 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x507 PUSH2 0x198 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x566 JUMPI PUSH2 0x52A PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65D DUP3 PUSH2 0x634 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66D DUP2 PUSH2 0x653 JUMP JUMPDEST DUP2 EQ PUSH2 0x677 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x688 DUP2 PUSH2 0x664 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A2 PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6B0 DUP5 DUP3 DUP6 ADD PUSH2 0x67A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CB DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0x653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x70C PUSH0 DUP4 ADD DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71C DUP3 PUSH2 0x653 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72C DUP2 PUSH2 0x712 JUMP JUMPDEST DUP2 EQ PUSH2 0x736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x747 DUP2 PUSH2 0x723 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x756 DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x771 DUP2 PUSH2 0x74D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x79A DUP6 DUP3 DUP7 ADD PUSH2 0x739 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7AB DUP6 DUP3 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7CA PUSH2 0x630 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D8 DUP6 DUP3 DUP7 ADD PUSH2 0x67A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E9 DUP6 DUP3 DUP7 ADD PUSH2 0x763 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x806 PUSH0 DUP4 ADD DUP6 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x813 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x851 DUP3 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x85C DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x81A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x884 DUP3 PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x88F DUP4 PUSH2 0x6B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x8A7 JUMPI PUSH2 0x8A6 PUSH2 0x81A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SWAP9 LOG0 PUSH8 0x33BF0AC2314B70C9 0xE1 0xB3 0xD7 MUL 0xC3 OR CALLDATALOAD PUSH32 0xDA1006CA4F066D50CC9AF1E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "392:880:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:27:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;736:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1140:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;933:199:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;559:50;;;;;;;;;;;;;;;;;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;464:27:2:-;;;;;;;;;;;;;:::o;736:189::-;822:12;;;;;;;;;;;805:29;;813:4;805:29;;;797:38;;;;;;846:4;:9;;;856:10;868:7;846:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;897:10;892:25;;;909:7;892:25;;;;;;:::i;:::-;;;;;;;;736:189;;:::o;1140:129::-;1531:13:3;:11;:13::i;:::-;1255:6:2::1;1228:14;:23;1243:7;1228:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1140:129:::0;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;933:199:2:-;1033:6;1003:14;:26;1018:10;1003:26;;;;;;;;;;;;;;;;:36;;995:45;;;;;;1081:6;1051:14;:26;1066:10;1051:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1098:2;:7;;;1106:10;1117:6;1098:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:199;;:::o;1796:162:3:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:109::-;2013:7;2042:24;2060:5;2042:24;:::i;:::-;2031:35;;1963:109;;;:::o;2078:148::-;2164:37;2195:5;2164:37;:::i;:::-;2157:5;2154:48;2144:76;;2216:1;2213;2206:12;2144:76;2078:148;:::o;2232:165::-;2291:5;2329:6;2316:20;2307:29;;2345:46;2385:5;2345:46;:::i;:::-;2232:165;;;;:::o;2403:122::-;2476:24;2494:5;2476:24;:::i;:::-;2469:5;2466:35;2456:63;;2515:1;2512;2505:12;2456:63;2403:122;:::o;2531:139::-;2577:5;2615:6;2602:20;2593:29;;2631:33;2658:5;2631:33;:::i;:::-;2531:139;;;;:::o;2676:500::-;2757:6;2765;2814:2;2802:9;2793:7;2789:23;2785:32;2782:119;;;2820:79;;:::i;:::-;2782:119;2940:1;2965:66;3023:7;3014:6;3003:9;2999:22;2965:66;:::i;:::-;2955:76;;2911:130;3080:2;3106:53;3151:7;3142:6;3131:9;3127:22;3106:53;:::i;:::-;3096:63;;3051:118;2676:500;;;;;:::o;3182:474::-;3250:6;3258;3307:2;3295:9;3286:7;3282:23;3278:32;3275:119;;;3313:79;;:::i;:::-;3275:119;3433:1;3458:53;3503:7;3494:6;3483:9;3479:22;3458:53;:::i;:::-;3448:63;;3404:117;3560:2;3586:53;3631:7;3622:6;3611:9;3607:22;3586:53;:::i;:::-;3576:63;;3531:118;3182:474;;;;;:::o;3662:332::-;3783:4;3821:2;3810:9;3806:18;3798:26;;3834:71;3902:1;3891:9;3887:17;3878:6;3834:71;:::i;:::-;3915:72;3983:2;3972:9;3968:18;3959:6;3915:72;:::i;:::-;3662:332;;;;;:::o;4000:180::-;4048:77;4045:1;4038:88;4145:4;4142:1;4135:15;4169:4;4166:1;4159:15;4186:191;4226:3;4245:20;4263:1;4245:20;:::i;:::-;4240:25;;4279:20;4297:1;4279:20;:::i;:::-;4274:25;;4322:1;4319;4315:9;4308:16;;4343:3;4340:1;4337:10;4334:36;;;4350:18;;:::i;:::-;4334:36;4186:191;;;;:::o;4383:194::-;4423:4;4443:20;4461:1;4443:20;:::i;:::-;4438:25;;4477:20;4495:1;4477:20;:::i;:::-;4472:25;;4521:1;4518;4514:9;4506:17;;4545:1;4539:4;4536:11;4533:37;;;4550:18;;:::i;:::-;4533:37;4383:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "455000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn(address,uint256)": "infinite",
								"depositToOtherSide(address,uint256)": "infinite",
								"owner()": "2560",
								"pendingBalance(address)": "2803",
								"renounceOwnership()": "infinite",
								"tokenAddress()": "2575",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 618,
									"end": 720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 618,
									"end": 720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 661,
									"end": 671,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 699,
									"end": 712,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 684,
									"end": 696,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 684,
									"end": 696,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 684,
									"end": 712,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 618,
									"end": 720,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 1272,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200298a06733bf0ac2314b70c9e1b3d702c317357f0da1006ca4f066d50cc9af1e64736f6c634300081a0033",
									".code": [
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "9DC29FAC"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "9DC29FAC"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "C3FDA31A"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "F3FEF3A3"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "3736F85D"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "9D76EA58"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 1272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 559,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 559,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 464,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 736,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 736,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1140,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1140,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 933,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 464,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 736,
											"end": 925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 805,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 813,
											"end": 817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 805,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 805,
											"end": 834,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 797,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 797,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 835,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 797,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "9DC29FAC"
										},
										{
											"begin": 856,
											"end": 866,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 846,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 846,
											"end": 876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 897,
											"end": 907,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 909,
											"end": 916,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 917,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 892,
											"end": 917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 892,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 892,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 917,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 892,
											"end": 917,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1228,
											"end": 1261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1261,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1017,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1028,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1029,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1039,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1039,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 995,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1065,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1076,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1051,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 1106,
											"end": 1116,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1098,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 933,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2072,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1963,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2042,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2226,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2078,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2164,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2202,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2218,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2144,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2385,
											"end": 2390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2345,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2391,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2345,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2403,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2476,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2501,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2517,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2456,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2622,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2658,
											"end": 2663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2631,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2631,
											"end": 2664,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2631,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2793,
											"end": 2800,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2812,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2782,
											"end": 2901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2820,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2820,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2899,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2820,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2901,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2782,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2965,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3031,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2965,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3031,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 3031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3106,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3159,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3106,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3310,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3313,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3313,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3275,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3483,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3458,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3458,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3511,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3586,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3586,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3904,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3834,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3834,
											"end": 3905,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3834,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3915,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3915,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3662,
											"end": 3994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4180,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4000,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4048,
											"end": 4125,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4150,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4263,
											"end": 4264,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4245,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4265,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4245,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4279,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4299,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4279,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4370,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4334,
											"end": 4370,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4350,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4350,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4370,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4334,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4443,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4477,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4536,
											"end": 4547,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4550,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4550,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4533,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/BridgeWveduCoin.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burn(address,uint256)": "9dc29fac",
							"depositToOtherSide(address,uint256)": "c3fda31a",
							"owner()": "8da5cb5b",
							"pendingBalance(address)": "3736f85d",
							"renounceOwnership()": "715018a6",
							"tokenAddress()": "9d76ea58",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract wVedu\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToOtherSide\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract wVedu\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeWveduCoin.sol\":\"WveduCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/BridgeWveduCoin.sol\":{\"keccak256\":\"0xbdefec2df7ba05ab87283f6d579433b2fc88ae6c02a22b75bc17052c6831aacd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6a888e97b2cdadc4f432e46cb2093eb57b6ac660252e76e7cda48a0c852d0b44\",\"dweb:/ipfs/Qmch5KiKAY5ZvNFLhTr2iw4oY638jEHXXADpxW7aAJcNR9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 221,
								"contract": "contracts/BridgeWveduCoin.sol:WveduCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 106,
								"contract": "contracts/BridgeWveduCoin.sol:WveduCoin",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 116,
								"contract": "contracts/BridgeWveduCoin.sol:WveduCoin",
								"label": "pendingBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"wVedu": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BridgeWveduCoin.sol\":\"wVedu\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/BridgeWveduCoin.sol\":{\"keccak256\":\"0xbdefec2df7ba05ab87283f6d579433b2fc88ae6c02a22b75bc17052c6831aacd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6a888e97b2cdadc4f432e46cb2093eb57b6ac660252e76e7cda48a0c852d0b44\",\"dweb:/ipfs/Qmch5KiKAY5ZvNFLhTr2iw4oY638jEHXXADpxW7aAJcNR9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 221,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							81
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 82,
							"src": "131:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "139:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 24,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 81,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 81,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 81,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 81,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 81,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 81,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								15,
								24
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"contracts/BridgeWveduCoin.sol": {
				"ast": {
					"absolutePath": "contracts/BridgeWveduCoin.sol",
					"exportedSymbols": {
						"Context": [
							390
						],
						"IERC20": [
							81
						],
						"Ownable": [
							360
						],
						"WveduCoin": [
							212
						],
						"wVedu": [
							102
						]
					},
					"id": 213,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 361,
							"src": "74:105:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 4,
							"src": "181:55:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 86,
										"name": "IERC20",
										"nameLocations": [
											"259:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 81,
										"src": "259:6:2"
									},
									"id": 87,
									"nodeType": "InheritanceSpecifier",
									"src": "259:6:2"
								}
							],
							"canonicalName": "wVedu",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 102,
							"linearizedBaseContracts": [
								102,
								81
							],
							"name": "wVedu",
							"nameLocation": "250:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "281:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "294:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "286:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "307:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "299:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:29:2"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:0:2"
									},
									"scope": 102,
									"src": "272:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "339:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "367:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "359:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:32:2"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:2"
									},
									"scope": 102,
									"src": "330:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 213,
							"src": "240:148:2",
							"usedErrors": [],
							"usedEvents": [
								15,
								24
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 103,
										"name": "Ownable",
										"nameLocations": [
											"414:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 360,
										"src": "414:7:2"
									},
									"id": 104,
									"nodeType": "InheritanceSpecifier",
									"src": "414:7:2"
								}
							],
							"canonicalName": "WveduCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212,
								360,
								390
							],
							"name": "WveduCoin",
							"nameLocation": "401:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 106,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "479:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "464:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 112,
									"name": "Burn",
									"nameLocation": "506:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "527:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "511:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "543:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "535:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:40:2"
									},
									"src": "500:51:2"
								},
								{
									"constant": false,
									"functionSelector": "3736f85d",
									"id": 116,
									"mutability": "mutable",
									"name": "pendingBalance",
									"nameLocation": "595:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "559:50:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 115,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 113,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "568:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "559:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 114,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "673:47:2",
										"statements": [
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "684:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "699:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "684:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "684:28:2"
											}
										]
									},
									"id": 130,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "661:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "665:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "661:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 123,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 120,
												"name": "Ownable",
												"nameLocations": [
													"653:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "653:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "653:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "638:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "630:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:23:2"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:0:2"
									},
									"scope": 212,
									"src": "618:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "786:139:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 141,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 133,
																		"src": "813:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_wVedu_$102",
																			"typeString": "contract wVedu"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_wVedu_$102",
																			"typeString": "contract wVedu"
																		}
																	],
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "805:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 139,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "805:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "805:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 143,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "822:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "805:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "797:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "797:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "856:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "860:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "856:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "868:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "846:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_wVedu_$102",
																"typeString": "contract wVedu"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "851:4:2",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "846:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "846:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "897:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "901:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "897:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 158,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "909:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 155,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "892:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "892:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "EmitStatement",
												"src": "887:30:2"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "745:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "756:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "750:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_wVedu_$102",
													"typeString": "contract wVedu"
												},
												"typeName": {
													"id": 132,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 131,
														"name": "wVedu",
														"nameLocations": [
															"750:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "750:5:2"
													},
													"referencedDeclaration": 102,
													"src": "750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_wVedu_$102",
														"typeString": "contract wVedu"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "770:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "762:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:29:2"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:0:2"
									},
									"scope": 212,
									"src": "736:189:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "984:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 171,
																	"name": "pendingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1003:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 174,
																"indexExpression": {
																	"expression": {
																		"id": 172,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1018:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1022:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1018:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1003:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 175,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "1033:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1003:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "995:45:2"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 179,
															"name": "pendingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1051:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 182,
														"indexExpression": {
															"expression": {
																"id": 180,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1066:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1070:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1066:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1051:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 183,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1081:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1051:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1051:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 189,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1106:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1110:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1106:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1117:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 186,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_wVedu_$102",
																"typeString": "contract wVedu"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1101:4:2",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1098:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "1098:26:2"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "942:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "951:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_wVedu_$102",
													"typeString": "contract wVedu"
												},
												"typeName": {
													"id": 164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 163,
														"name": "wVedu",
														"nameLocations": [
															"951:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "951:5:2"
													},
													"referencedDeclaration": 102,
													"src": "951:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_wVedu_$102",
														"typeString": "contract wVedu"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "969:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "961:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:26:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:0:2"
									},
									"scope": 212,
									"src": "933:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1217:52:2",
										"statements": [
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 204,
															"name": "pendingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1228:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 206,
														"indexExpression": {
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1228:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 207,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1255:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1228:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1228:33:2"
											}
										]
									},
									"functionSelector": "c3fda31a",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyOwner",
												"nameLocations": [
													"1208:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "1208:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1208:9:2"
										}
									],
									"name": "depositToOtherSide",
									"nameLocation": "1149:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1176:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1168:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1193:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1185:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:33:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:0:2"
									},
									"scope": 212,
									"src": "1140:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 213,
							"src": "392:880:2",
							"usedErrors": [
								226,
								231
							],
							"usedEvents": [
								112,
								237
							]
						}
					],
					"src": "39:1233:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							390
						],
						"Ownable": [
							360
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 361,
							"sourceUnit": 391,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 215,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 390,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 218,
										"name": "Context",
										"nameLocations": [
											"692:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 390,
										"src": "692:7:3"
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 217,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 360,
							"linearizedBaseContracts": [
								360,
								390
							],
							"name": "Ownable",
							"nameLocation": "681:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 360,
									"src": "706:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 220,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 226,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:3"
									},
									"src": "825:50:3"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 231,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:3"
									},
									"src": "968:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 237,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1042:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1073:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:3"
									},
									"src": "1015:84:3"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1259:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 243,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "1273:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "IfStatement",
												"src": "1269:95:3",
												"trueBody": {
													"id": 256,
													"nodeType": "Block",
													"src": "1301:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 250,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 249,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "1322:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 255,
															"nodeType": "RevertStatement",
															"src": "1315:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1392:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 258,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1373:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:3"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 263,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1237:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:3"
									},
									"scope": 360,
									"src": "1225:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1521:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 266,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1531:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:3"
											},
											{
												"id": 269,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:3"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 271,
									"name": "onlyOwner",
									"nameLocation": "1509:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:3"
									},
									"src": "1500:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1693:30:3",
										"statements": [
											{
												"expression": {
													"id": 277,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "1710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "1703:13:3"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1684:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:3"
									},
									"scope": 360,
									"src": "1638:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1841:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 284,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "1855:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 286,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "1866:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "1851:101:3",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "1880:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 290,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "1928:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 289,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1901:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 293,
															"nodeType": "RevertStatement",
															"src": "1894:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:3"
									},
									"scope": 360,
									"src": "1796:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2347:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 303,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2357:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:3"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 300,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "2337:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:3"
									},
									"scope": 360,
									"src": "2293:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "2613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 319,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "2627:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 320,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 333,
												"nodeType": "IfStatement",
												"src": "2623:91:3",
												"trueBody": {
													"id": 332,
													"nodeType": "Block",
													"src": "2651:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 326,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 325,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "2672:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 331,
															"nodeType": "RevertStatement",
															"src": "2665:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "2742:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 334,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2723:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 316,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 271,
												"src": "2603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2570:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:3"
									},
									"scope": 360,
									"src": "2543:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2975:124:3",
										"statements": [
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "2985:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 345,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"id": 347,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "3004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:3"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "3020:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "3029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 354,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3073:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3083:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3052:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "EmitStatement",
												"src": "3047:45:3"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:3"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:3"
									},
									"scope": 360,
									"src": "2912:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 361,
							"src": "663:2438:3",
							"usedErrors": [
								226,
								231
							],
							"usedEvents": [
								237
							]
						}
					],
					"src": "102:3000:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							390
						]
					},
					"id": 391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 390,
							"linearizedBaseContracts": [
								390
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 368,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 367,
												"id": 370,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 390,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 377,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 376,
												"id": 379,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 390,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 385,
												"id": 387,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 390,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 391,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			}
		}
	}
}